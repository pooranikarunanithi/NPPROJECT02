{"ast":null,"code":"var _jsxFileName = \"C:\\\\Usertemp\\\\becodeweb\\\\npproject\\\\client\\\\src\\\\components\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n\n  if (!user) {\n    console.log(\"I came here because there is no login\"); // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(PrivateRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Usertemp/becodeweb/npproject/client/src/components/PrivateRoute.js"],"names":["React","useSelector","Navigate","PrivateRoute","children","user","state","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,WAAW,CAAEK,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;;AAEA,MAAI,CAACD,IAAL,EAAW;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EADY,CAET;AACA;AACA;AACA;;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAOJ,QAAP;AACD,CAZD;;GAAMD,Y;UACaF,W;;;KADbE,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n \r\nconst PrivateRoute = ({ children }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n \r\n  if (!user) {\r\n console.log(\"I came here because there is no login\") \r\n    // Redirect them to the /login page, but save the current location they were\r\n    // trying to go to when they were redirected. This allows us to send them\r\n    // along to that page after they login, which is a nicer user experience\r\n    // than dropping them off on the home page.\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n  return children;\r\n};\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}