{"ast":null,"code":"var _jsxFileName = \"C:\\\\Usertemp\\\\becodeweb\\\\npproject\\\\client\\\\src\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { login } from \"../actions/auth\";\nimport LoginForm from \"../components/LoginForm\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let Navigate = useNavigate();\n  const [email, setEmail] = useState(\"ryan@gmail.com\");\n  const [password, setPassword] = useState(\"rrrrrr\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"SEND LOGIN DATA\", {\n      email,\n      password\n    });\n\n    try {\n      let res = await login({\n        email,\n        password\n      });\n\n      if (res.data) {\n        console.log(\"SAVE USER RES IN REDUX AND LOCAL STORAGE THEN REDIRECT ===> \"); // console.log(res.data);\n        // save user and token to local storage\n\n        window.localStorage.setItem(\"auth\", JSON.stringify(res.data)); // save user and token to redux\n\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: res.data\n        });\n        Navigate(\"/home\");\n      }\n    } catch (err) {\n      console.log(err);\n      if (err.response.status === 400) toast.error(err.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-secondary p-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(LoginForm, {\n            handleSubmit: handleSubmit,\n            email: email,\n            setEmail: setEmail,\n            password: password,\n            setPassword: setPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"PFpPCtIc0HQBRqI0RJp42UH2+gk=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Usertemp/becodeweb/npproject/client/src/auth/Login.js"],"names":["useState","toast","login","LoginForm","useDispatch","useNavigate","Login","Navigate","email","setEmail","password","setPassword","dispatch","handleSubmit","e","preventDefault","console","log","res","data","window","localStorage","setItem","JSON","stringify","type","payload","err","response","status","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAUC,WAAV,QAA6B,kBAA7B;;;;AACA,MAAMC,KAAK,GAAG,MAAO;AAAA;;AACpB,MAAIC,QAAQ,GAAEF,WAAW,EAAzB;AACC,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,gBAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,QAAD,CAAxC;AAEA,QAAMY,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B;AAAET,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAA/B;;AACA,QAAI;AACF,UAAIQ,GAAG,GAAG,MAAMhB,KAAK,CAAC;AAAEM,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAD,CAArB;;AAEA,UAAIQ,GAAG,CAACC,IAAR,EAAc;AACZH,QAAAA,OAAO,CAACC,GAAR,CACE,8DADF,EADY,CAIZ;AACA;;AACAG,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCC,IAAI,CAACC,SAAL,CAAeN,GAAG,CAACC,IAAnB,CAApC,EANY,CAOZ;;AACAP,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAE,gBADC;AAEPC,UAAAA,OAAO,EAAER,GAAG,CAACC;AAFN,SAAD,CAAR;AAIAZ,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,KAjBD,CAiBE,OAAOoB,GAAP,EAAY;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC5B,KAAK,CAAC6B,KAAN,CAAYH,GAAG,CAACC,QAAJ,CAAaT,IAAzB;AAClC;AACF,GAxBD;;AA2BE,sBACI;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,YAAY,EAAEN,YADhB;AAEE,YAAA,KAAK,EAAEL,KAFT;AAGE,YAAA,QAAQ,EAAEC,QAHZ;AAIE,YAAA,QAAQ,EAAEC,QAJZ;AAKE,YAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADJ;AAsBC,CAxDL;;GAAML,K;UACSD,W,EAIID,W;;;KALbE,K;AA0DN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { login } from \"../actions/auth\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nconst Login = ( ) => {\r\n let Navigate =useNavigate()\r\n  const [email, setEmail] = useState(\"ryan@gmail.com\");\r\n  const [password, setPassword] = useState(\"rrrrrr\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"SEND LOGIN DATA\", { email, password });\r\n    try {\r\n      let res = await login({ email, password });\r\n\r\n      if (res.data) {\r\n        console.log(\r\n          \"SAVE USER RES IN REDUX AND LOCAL STORAGE THEN REDIRECT ===> \"\r\n        );\r\n        // console.log(res.data);\r\n        // save user and token to local storage\r\n        window.localStorage.setItem(\"auth\", JSON.stringify(res.data));\r\n        // save user and token to redux\r\n        dispatch({\r\n          type: \"LOGGED_IN_USER\",\r\n          payload: res.data,\r\n        });\r\n        Navigate(\"/home\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 400) toast.error(err.response.data);\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n          <div className=\"container-fluid bg-secondary p-5 text-center\">\r\n            <h1>Login</h1>\r\n          </div>\r\n    \r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 offset-md-3\">\r\n                <LoginForm\r\n                  handleSubmit={handleSubmit}\r\n                  email={email}\r\n                  setEmail={setEmail}\r\n                  password={password}\r\n                  setPassword={setPassword}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n    \r\nexport default Login;\r\n    "]},"metadata":{},"sourceType":"module"}