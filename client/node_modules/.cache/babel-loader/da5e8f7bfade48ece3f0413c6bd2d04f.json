{"ast":null,"code":"var _jsxFileName = \"C:\\\\Usertemp\\\\becodeweb\\\\npproject\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; // 1.import from react-redux and redux\n\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // 2.create user reducer fuction\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //{ type:'LOGGED_IN_USER4',payload:{name:'ryan',role:'seller'}}\n  switch (action, type) {\n    case \"LOGGED_IN_USER\":\n      return { ...state,\n        ...action.payload\n      };\n\n    case \"LOGOUT\":\n      return action.payload;\n\n    default:\n      return Store;\n  }\n}; // 3.combine multiple reducers\n\n\nconst rootReducer = combineReducers({\n  user: authReducer\n}); // 4.create redux store\n\nconst store = createStore(rootReducer, composeWithDevTools()); //5.provide redux store  to the entire app\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(\"provider\", {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Usertemp/becodeweb/npproject/client/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","combineReducers","Provider","composeWithDevTools","authReducer","state","action","type","payload","Store","rootReducer","user","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAuB,aAAvB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC,C,CAEA;;;;AACA,MAAMC,WAAW,GAAC,YAAoB;AAAA,MAAnBC,KAAmB,uEAAb,EAAa;AAAA,MAAVC,MAAU;;AAAC;AACrC,UAAOA,MAAM,EAACC,IAAd;AACE,SAAK,gBAAL;AACE,aAAM,EAAC,GAAGF,KAAJ;AAAU,WAAGC,MAAM,CAACE;AAApB,OAAN;;AACA,SAAK,QAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AACA;AACE,aAAOC,KAAP;AANR;AAQD,CATD,C,CAUA;;;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAClCU,EAAAA,IAAI,EAACP;AAD6B,CAAD,CAAnC,C,CAGA;;AACA,MAAMQ,KAAK,GAAGZ,WAAW,CAACU,WAAD,EAAaP,mBAAmB,EAAhC,CAAzB,C,CACA;;AAEAN,QAAQ,CAACgB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE;AAAU,IAAA,KAAK,EAAGD,KAAlB;AAAA,2BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAhB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// 1.import from react-redux and redux\nimport {createStore,combineReducers} from 'redux'\nimport { Provider}from 'react-redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n// 2.create user reducer fuction\nconst authReducer=(state={},action) =>{//{ type:'LOGGED_IN_USER4',payload:{name:'ryan',role:'seller'}}\n  switch(action,type){\n    case \"LOGGED_IN_USER\":\n      return{...state,...action.payload}\n      case \"LOGOUT\":\n        return action.payload;\n        default:\n          return Store;\n  }\n}\n// 3.combine multiple reducers\n\nconst rootReducer = combineReducers({\n  user:authReducer,  \n});\n// 4.create redux store\nconst store = createStore(rootReducer,composeWithDevTools());\n//5.provide redux store  to the entire app\n\nReactDOM.render(\n  <React.StrictMode>\n    <provider store ={store} > \n    <App />\n    </provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}